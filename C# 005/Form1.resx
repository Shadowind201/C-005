<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>